// <auto-generated />
using System;
using LibMotors.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibMotors.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibMotors.Domain.Entities.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DOB = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "uncle.bob@gmail.com",
                            Fullname = "Uncle Bob",
                            Gender = 0,
                            HiredDate = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = "B9A09",
                            LocationId = "S034b9",
                            Mobile = "999-888-7777",
                            Position = "WarehouseManager"
                        },
                        new
                        {
                            Id = 2,
                            DOB = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "uncle.ochuko@gmail.com",
                            Fullname = "ochuko Lucky",
                            Gender = 0,
                            HiredDate = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = "CC9A09",
                            LocationId = "C034b9",
                            Mobile = "888-888-7777",
                            Position = "WarehouPersonel"
                        });
                });

            modelBuilder.Entity("LibMotors.Domain.Entities.InventoryItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<string>("ItemStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ShipmentCost")
                        .HasColumnType("float");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeesId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InventoryItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryDate = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemStatus = "Shift",
                            OwnerContact = "999-888-7777",
                            ReceiptDetails = "Hello word",
                            ReceiptName = "john dev",
                            ShipmentCost = 8000.0,
                            ShipmentDate = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockItem = "Iphone",
                            StockOwner = " marrt Bob"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryDate = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemStatus = "Shift",
                            OwnerContact = "999-888-7777",
                            ReceiptDetails = "Hello word",
                            ReceiptName = "john dev",
                            ShipmentCost = 8000.0,
                            ShipmentDate = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockItem = "Iphone",
                            StockOwner = " marrt Bob"
                        });
                });

            modelBuilder.Entity("LibMotors.Domain.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("FinalStock")
                        .HasColumnType("int");

                    b.Property<DateTime>("MoveMovementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockIn")
                        .HasColumnType("int");

                    b.Property<string>("StockName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockOut")
                        .HasColumnType("int");

                    b.Property<string>("StockReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseLocation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeesId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("LibMotors.Domain.Entities.InventoryItems", b =>
                {
                    b.HasOne("LibMotors.Domain.Entities.Employees", "Employees")
                        .WithMany("InventoryItems")
                        .HasForeignKey("EmployeesId");

                    b.HasOne("LibMotors.Domain.Entities.Warehouse", "Warehouse")
                        .WithMany("InventoryItems")
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Employees");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("LibMotors.Domain.Entities.Warehouse", b =>
                {
                    b.HasOne("LibMotors.Domain.Entities.Employees", "Employees")
                        .WithMany("Warehouses")
                        .HasForeignKey("EmployeesId");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("LibMotors.Domain.Entities.Employees", b =>
                {
                    b.Navigation("InventoryItems");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("LibMotors.Domain.Entities.Warehouse", b =>
                {
                    b.Navigation("InventoryItems");
                });
#pragma warning restore 612, 618
        }
    }
}
